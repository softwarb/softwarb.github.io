class e{componentDidLoad(){this.updateCodeLines(this.lines)}updateCodeLines(e){if(null==e)return;const t=e.split(",").reduce((e,t)=>{if(-1!==t.indexOf("-")){const[n,i]=t.split("-").map(e=>parseInt(e,10));return e.concat(function(e,t){return Array(t-e+1).fill("").map((t,n)=>e+n)}(n,i))}return e.concat(parseInt(t,10))},[]),n=this.el.querySelector("code");n.innerHTML=n.innerHTML.split("\n").map((e,n)=>-1!==t.indexOf(n+1)?`<span class="line-highlight">${e}</span>`:e).join("\n")}static get is(){return"highlight-code-line"}static get properties(){return{el:{elementRef:!0},lines:{type:String,attr:"lines",watchCallbacks:["updateCodeLines"]}}}}export{e as HighlightCodeLine};