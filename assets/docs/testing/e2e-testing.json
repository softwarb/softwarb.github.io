{"title":"End-to-end Testing","description":"End-to-end Testing","url":"/docs/end-to-end-testing","contributors":["adamdbradley","mattdsteele","simonhaenisch"],"headings":[{"id":"end-to-end-testing","level":1,"text":"End-to-end Testing"},{"id":"example-end-to-end-test","level":2,"text":"Example End-to-end Test"},{"id":"e2e-testing-recipes","level":2,"text":"E2E Testing Recipes"},{"id":"find-an-element-in-the-shadow-dom","level":4,"text":"Find an element in the Shadow DOM"},{"id":"set-a-prop-on-a-component","level":4,"text":"Set a @Prop() on a component"},{"id":"call-a-method-on-a-component","level":4,"text":"Call a @Method() on a component"},{"id":"type-inside-an-input-field","level":4,"text":"Type inside an input field"},{"id":"checking-the-text-of-a-rendered-component","level":4,"text":"Checking the text of a rendered component"},{"id":"checking-a-component-s-html","level":4,"text":"Checking a component&#39;s HTML"}],"srcPath":"./src/docs/testing/e2e-testing.md","content":"\n<h1 id=\"end-to-end-testing\">\n  \n  End-to-end Testing\n  \n</h1>\n<p>E2E tests verify your components in a real browser. For example, when <code>my-component</code> has the X attribute, the child component then renders the text Y, and expects to receive the event Z. By using Puppeteer for rendering tests (rather than a Node environment simulating how a browser works), your end-to-end tests are able to run within an actual browser in order to give better results.</p>\n<p>Stencil provides many utility functions to help test <a href=\"https://jestjs.io/\">Jest</a> and <a href=\"https://pptr.dev/\">Puppeteer</a>. For example, a component&#39;s shadow dom can be queried and tested with the Stencil utility functions built on top of Puppeteer. Tests can not only be provided mock HTML content, but they can also go to URLs of your app which Puppeteer is able to open up and test on Stencil&#39;s dev server.</p>\n<p>End-to-end tests require a fresh build, dev-server, and puppeteer browser instance created before the tests can actually run. With the added build complexities, the <code>stencil test</code> command is able to organize the build requirements beforehand.</p>\n<p>To run E2E tests, run <code>stencil test --e2e</code>. By default, files ending in <code>.e2e.ts</code> will be executed.</p>\n<p>Stencil&#39;s E2E test are provided with the following API, available via <code>@stencil/core/testing</code>.\nMost methods are async and return Promises. Use <code>async</code> and <code>await</code> to declutter your tests.</p>\n<ul>\n<li><code>newE2EPage</code>: Should be invoked at the start of each test to instantiate a new <code>E2EPage</code> object</li>\n</ul>\n<p><code>E2EPage</code> is a wrapper utility to Puppeteer to simplify writing tests. Some helpful methods on <code>E2EPage</code> include:</p>\n<ul>\n<li><code>setContent(html: string)</code>: Sets the content of a page. This is where you would include the markup of the component under test.</li>\n<li><code>find(selector: string)</code>: Find an element that matches the selector. Similar to <code>document.querySelector</code>.</li>\n<li><code>waitForChanges()</code>: Both Stencil and Puppeteer have an asynchronous architecture, which is a good thing for performance. Since all calls are async, it&#39;s required that <code>await page.waitForChanges()</code> is called when changes are made to components.</li>\n</ul>\n<p>An example E2E test might have the following boilerplate:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> newE2EPage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core/testing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should render a foo-component'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">newE2EPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`&lt;foo-component>&lt;/foo-component>`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo-component'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toBeNull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"example-end-to-end-test\">\n  <a class=\"heading-link\" href=\"#example-end-to-end-test\"><app-icon name=\"link\"></app-icon>\n  Example End-to-end Test\n  </a>\n</h2>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> newE2EPage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core/testing'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should create toggle, unchecked by default'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">newE2EPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n    &lt;ion-toggle class=\"pretty-toggle\">&lt;/ion-toggle>\n  `</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> ionChange <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">spyOnEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ionChange'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> toggle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ion-toggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveClasses</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pretty-toggle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hydrated'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toggle-checked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  toggle<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'checked'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toggle-checked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>ionChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveReceivedEventDetail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    checked<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token string\">'on'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"e2e-testing-recipes\">\n  <a class=\"heading-link\" href=\"#e2e-testing-recipes\"><app-icon name=\"link\"></app-icon>\n  E2E Testing Recipes\n  </a>\n</h2>\n\n<h4 id=\"find-an-element-in-the-shadow-dom\">\n  <a class=\"heading-link\" href=\"#find-an-element-in-the-shadow-dom\"><app-icon name=\"link\"></app-icon>\n  Find an element in the Shadow DOM\n  </a>\n</h4>\n<p>Use the &quot;piercing&quot; selector <code>&gt;&gt;&gt;</code> to query for an object inside a component&#39;s shadow root:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo-component >>> .close-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h4 id=\"set-a-prop-on-a-component\">\n  <a class=\"heading-link\" href=\"#set-a-prop-on-a-component\"><app-icon name=\"link\"></app-icon>\n  Set a @Prop() on a component\n  </a>\n</h4>\n<p>Use <code>page.$eval</code> (part of the Puppeteer API) to set props or otherwise manipulate a component:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// create a new puppeteer page</span>\n<span class=\"token comment\">// load the page with html content</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n      &lt;prop-cmp>&lt;/prop-cmp>\n    `</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// select the \"prop-cmp\" element</span>\n<span class=\"token comment\">// and run the callback in the browser's context</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prop-cmp'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>elm<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// within the browser's context</span>\n  <span class=\"token comment\">// let's set new property values on the component</span>\n  elm<span class=\"token punctuation\">.</span>first <span class=\"token operator\">=</span> <span class=\"token string\">'Marty'</span><span class=\"token punctuation\">;</span>\n  elm<span class=\"token punctuation\">.</span>lastName <span class=\"token operator\">=</span> <span class=\"token string\">'McFly'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// we just made a change and now the async queue need to process it</span>\n<span class=\"token comment\">// make sure the queue does its work before we continue</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h4 id=\"call-a-method-on-a-component\">\n  <a class=\"heading-link\" href=\"#call-a-method-on-a-component\"><app-icon name=\"link\"></app-icon>\n  Call a @Method() on a component\n  </a>\n</h4>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> elm <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'method-cmp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nelm<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someProp'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> methodRtnValue <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> elm<span class=\"token punctuation\">.</span><span class=\"token function\">callMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someMethod'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h4 id=\"type-inside-an-input-field\">\n  <a class=\"heading-link\" href=\"#type-inside-an-input-field\"><app-icon name=\"link\"></app-icon>\n  Type inside an input field\n  </a>\n</h4>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">newE2EPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  html<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n      &lt;dom-interaction>&lt;/dom-interaction>\n    `</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dom-interaction >>> .input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">'8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">'8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">down</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Shift'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">'KeyM'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">'KeyP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">'KeyH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">up</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Shift'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h4 id=\"checking-the-text-of-a-rendered-component\">\n  <a class=\"heading-link\" href=\"#checking-the-text-of-a-rendered-component\"><app-icon name=\"link\"></app-icon>\n  Checking the text of a rendered component\n  </a>\n</h4>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n      &lt;prop-cmp first=\"Marty\" last-name=\"McFly\">&lt;/prop-cmp>\n    `</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> elm <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prop-cmp >>> div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>elm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqualText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, my name is Marty McFly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h4 id=\"checking-a-component-s-html\">\n  <a class=\"heading-link\" href=\"#checking-a-component-s-html\"><app-icon name=\"link\"></app-icon>\n  Checking a component&#39;s HTML\n  </a>\n</h4>\n<p>For shadowRoot content:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\">        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span>shadowRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqualHtml</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`&lt;div>\n        &lt;div class=\\\"nav-desktop\\\">\n          &lt;slot>&lt;/slot>\n        &lt;/div>\n      &lt;/div>`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  <p>For non-shadow content:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\">        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqualHtml</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`&lt;div>\n        &lt;div class=\\\"nav-desktop\\\">\n          &lt;slot>&lt;/slot>\n        &lt;/div>\n      &lt;/div>`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  "}