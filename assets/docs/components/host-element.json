{"title":"Working with host elements","description":"Working with host elements","url":"/docs/host-element","contributors":["jthoms1"],"headings":[{"id":"working-with-host-elements","level":1,"text":"Working with host elements"},{"id":"hostdata-method","level":2,"text":"hostData() method"},{"id":"element-decorator","level":2,"text":"Element Decorator"}],"srcPath":"./src/docs/components/host-element.md","content":"\n<h1 id=\"working-with-host-elements\">\n  \n  Working with host elements\n  \n</h1>\n<p>Stencil components render their children declaratively in their <code>render</code> method <a href=\"templating-jsx\">using JSX</a>. However, sometimes you will need to set properties on the host element itself. Stencil provides a couple of ways to access and update the host element.</p>\n\n<h2 id=\"hostdata-method\">\n  <a class=\"heading-link\" href=\"#hostdata-method\"><app-icon name=\"link\"></app-icon>\n  hostData() method\n  </a>\n</h2>\n<p>The <code>hostData</code> method can be implemented by any Stencil component and provides a way to declaratively set properties on the host element during rendering. The <code>hostData</code> method is called whenever <code>render</code> is, so it is useful for reacting to state and prop changes.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">hostData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'class'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'is-open'</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isOpen <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'aria-hidden'</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isOpen <span class=\"token operator\">?</span> <span class=\"token string\">'false'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"element-decorator\">\n  <a class=\"heading-link\" href=\"#element-decorator\"><app-icon name=\"link\"></app-icon>\n  Element Decorator\n  </a>\n</h2>\n<p>The <code>@Element()</code> decorator is how to get access to the host element within the class instance. This returns an instance of an <code>HTMLElement</code>, so standard DOM methods/events can be used here.</p>\n<p>If you need to update the host element in response to prop or state changes, you should do so using the <code>hostData</code> method.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Element <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token operator\">+</span> @<span class=\"token function\">Element</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> el<span class=\"token punctuation\">:</span> HTMLElement<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">getListHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  "}