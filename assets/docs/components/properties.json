{"title":"Properties","description":"Properties","url":"/docs/properties","contributors":["jthoms1"],"headings":[{"id":"prop-decorator","level":1,"text":"Prop Decorator"},{"id":"prop-value-mutability","level":2,"text":"Prop value mutability"},{"id":"prop-default-values-and-validation","level":2,"text":"Prop default values and validation"},{"id":"reflect-properties-to-attributes","level":2,"text":"Reflect Properties to Attributes"}],"srcPath":"./src/docs/components/properties.md","content":"\n<h1 id=\"prop-decorator\">\n  \n  Prop Decorator\n  \n</h1>\n<p>Props are custom attribute/properties exposed publicly on the element that developers can provide values for. Children components should not know about or reference parent components, so Props should be used to pass data down from the parent to the child. Components need to explicitly declare the Props they expect to receive using the <code>@Prop()</code> decorator. Props can be a <code>number</code>, <code>string</code>, <code>boolean</code>, or even an <code>Object</code> or <code>Array</code>. By default, when a member decorated with a <code>@Prop()</code> decorator is set, the component will efficiently re-render.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Prop <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">+</span>   @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>   @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> favoriteNumber<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>   @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> isSelected<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span>   @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> myHttpService<span class=\"token punctuation\">:</span> MyHttpService<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>Within the <code>TodoList</code> class, the Props are accessed via the <code>this</code> operator.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token function\">logColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>Externally, Props are set on the element.</p>\n<blockquote>\n<p>In HTML, you must set attributes using dash-case:</p>\n</blockquote>\n\n  <highlight-code-line >\n    <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>todo-list</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">favorite-number</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>24<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">is-selected</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>todo-list</span><span class=\"token punctuation\">></span></span></code></pre>\n  </highlight-code-line>\n  <p>in JSX you set an attribute using camelCase:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>todo-list</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">favoriteNumber</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>{24}</span> <span class=\"token attr-name\">isSelected</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>todo-list</span><span class=\"token punctuation\">></span></span></code></pre>\n  </highlight-code-line>\n  <p>They can also be accessed via JS from the element.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> todoListElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todo-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>todoListElement<span class=\"token punctuation\">.</span>myHttpService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// MyHttpService</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>todoListElement<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"prop-value-mutability\">\n  <a class=\"heading-link\" href=\"#prop-value-mutability\"><app-icon name=\"link\"></app-icon>\n  Prop value mutability\n  </a>\n</h2>\n<p>It&#39;s important to know, that a Prop is <em>by default</em> immutable from inside the component logic. Once a value is set by a user, the component cannot update it internally.</p>\n<p>However, it&#39;s possible to explicitly allow a Prop to be mutated from inside the component, by declaring it as <strong>mutable</strong>, as in the example below:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Prop <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NameElement</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> mutable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Stencil'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">componentDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Stencil 0.7.0'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"prop-default-values-and-validation\">\n  <a class=\"heading-link\" href=\"#prop-default-values-and-validation\"><app-icon name=\"link\"></app-icon>\n  Prop default values and validation\n  </a>\n</h2>\n<p>Setting a default value on a Prop:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Prop <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NameElement</span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">+</span>  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Stencil'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>To do validation of a Prop, you can use the <a href=\"#watch\">@Watch()</a> decorator:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Prop<span class=\"token punctuation\">,</span> Watch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Stencil'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">+</span> @<span class=\"token function\">Watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">validateName</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> oldValue<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isBlank <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> newValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> has2chars <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> newValue <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">&amp;&amp;</span> newValue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isBlank<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: required'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>has2chars <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name: has2chars'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"reflect-properties-to-attributes\">\n  <a class=\"heading-link\" href=\"#reflect-properties-to-attributes\"><app-icon name=\"link\"></app-icon>\n  Reflect Properties to Attributes\n  </a>\n</h2>\n<p>In some cases it may be useful to keep a Prop in sync with an attribute. In this case you can use the <code>reflectToAttr</code> option in the <code>@Prop()</code> decorator:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\">@<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  reflectToAttr<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n  </highlight-code-line>\n  "}