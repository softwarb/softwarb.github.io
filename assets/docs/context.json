{"title":"Context","description":"Stencil has a number of add-ons that you can use with the build process.","url":"/docs/context","contributors":["jthoms1"],"headings":[{"id":"context","level":1,"text":"Context"},{"id":"what-is-context-","level":3,"text":"What is Context?"},{"id":"how-to-bind-a-context-item","level":3,"text":"How to Bind a Context Item"},{"id":"how-to-define-a-context-item","level":3,"text":"How to Define a Context Item"}],"srcPath":"./src/docs/context.md","content":"\n<h1 id=\"context\">\n  \n  Context\n  \n</h1>\n\n<h3 id=\"what-is-context-\">\n  <a class=\"heading-link\" href=\"#what-is-context-\"><app-icon name=\"link\"></app-icon>\n  What is Context?\n  </a>\n</h3>\n<p>Context is a global object which can be used to store global variables, singleton objects etc. and bind them in your components as props. You can see it as a dependency injector for Stencil.</p>\n\n<h3 id=\"how-to-bind-a-context-item\">\n  <a class=\"heading-link\" href=\"#how-to-bind-a-context-item\"><app-icon name=\"link\"></app-icon>\n  How to Bind a Context Item\n  </a>\n</h3>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\">@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  tag<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-component'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> context<span class=\"token punctuation\">:</span> <span class=\"token string\">'myObj'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> myObj<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h3 id=\"how-to-define-a-context-item\">\n  <a class=\"heading-link\" href=\"#how-to-define-a-context-item\"><app-icon name=\"link\"></app-icon>\n  How to Define a Context Item\n  </a>\n</h3>\n<p>Context items are defined by directly binding to the global <code>Context</code> object. As a best practice you can use <code>src/global</code> to store the definitions.</p>\n<p>First you need to define the item:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// src/global/myObj.ts</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> privateInstance <span class=\"token operator\">=</span> <span class=\"token operator\">...</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    call<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      privateInstance<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  <p>Then create a global script that will be used to reference all the context items:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// src/global/index.ts</span>\n\n<span class=\"token keyword\">import</span> myObj <span class=\"token keyword\">from</span> <span class=\"token string\">'./myObj'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">var</span> Context<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n\nContext<span class=\"token punctuation\">.</span>globalVar <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\nContext<span class=\"token punctuation\">.</span>myObj <span class=\"token operator\">=</span> myObj<span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  <p>Finally just add the global script in config:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span><span class=\"token punctuation\">.</span>config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  globalScript<span class=\"token punctuation\">:</span> <span class=\"token string\">'src/global/index.ts'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  "}