{"title":"My First Component","description":"My First Component","url":"/docs/my-first-component","contributors":["jthoms1"],"headings":[{"id":"my-first-component","level":1,"text":"My First Component"},{"id":"so-what-is-really-going-on-here-","level":2,"text":"So what is really going on here?"}],"srcPath":"./src/docs/introduction/my-first-component.md","content":"\n<h1 id=\"my-first-component\">\n  \n  My First Component\n  \n</h1>\n<p>Stencil components are created by adding a new file with a <code>.tsx</code> extension, such as <code>my-first-component.tsx</code>, and placing them in the <code>src/components</code> directory.\nThe <code>.tsx</code> extension is required since Stencil components are built using <a href=\"https://facebook.github.io/react/docs/introducing-jsx.html\">JSX</a> and TypeScript.</p>\n<p>Here is an example of what a Stencil component looks like:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Prop <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  tag<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-first-component'</span><span class=\"token punctuation\">,</span>\n  styleUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-first-component.css'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Indicate that name should be a public property on the component</span>\n  @<span class=\"token function\">Prop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n        My name is <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <blockquote>\n<p>Don&#39;t fully understand what&#39;s going on? Don&#39;t worry, we&#39;ll explain each pieces in detail later on.</p>\n</blockquote>\n<p>Once compiled, this component can be used in HTML just like any other tag.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-first-component</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Max<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-first-component</span><span class=\"token punctuation\">></span></span></code></pre>\n  </highlight-code-line>\n  <blockquote>\n<p>Web Components must have a - in the tag. <code>firstComponent</code> would not be a valid tag name.</p>\n</blockquote>\n<p>When rendered, the browser will display <code>My name is Max</code>.</p>\n\n<h2 id=\"so-what-is-really-going-on-here-\">\n  <a class=\"heading-link\" href=\"#so-what-is-really-going-on-here-\"><app-icon name=\"link\"></app-icon>\n  So what is really going on here?\n  </a>\n</h2>\n<p>Let&#39;s dive in.</p>\n<p>The first piece we see is the <code>@Component</code> decorator.\nThis decorator provides metadata about our component to the Stencil compiler.\nInformation, such as the tag to use, and external styles, can be set here and picked up by the compiler.</p>\n<p>Below the <code>@Component()</code> decorator, we have a standard JavaScript class.\nThis is where you&#39;ll write the bulk of your code to bring your Stencil component to life.\nHere is where you&#39;d write functions or provide business logic.</p>\n<p>In order for the component to render something to the screen, we must declare a render function that returns JSX.\nIf you&#39;re not sure what JSX is, don&#39;t worry, we&#39;ll go over it in detail in the <stencil-route-link url=\"/docs/templating\">Templating Docs</stencil-router-link>.</p>\n<p>The quick idea is that our render function needs to return a representation of the HTML we want to push to the DOM.</p>\n<p>The <code>name</code> property on the class also has a decorator applied to it, <code>@Prop()</code>.\nThis decorator tells the compiler that the property is public to the component, and the user should be setting it.\nWe set this property like so:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-first-component</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Max<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-first-component</span><span class=\"token punctuation\">></span></span></code></pre>\n  </highlight-code-line>\n  <p>Any property decorated with <code>@Prop()</code> is also automatically watched for changes.\nIf a user of our component were to change the element&#39;s <code>name</code> property, our component would fire its <code>render</code> function again, updating the displayed content.</p>\n"}