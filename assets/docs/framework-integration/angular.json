{"title":"Angular Intergration with Stencil","description":"Angular Intergration with Stencil","url":"/docs/angular","contributors":["jthoms1","adamdbradley","kensodemann","peterpeterparker"],"headings":[{"id":"angular","level":1,"text":"Angular"},{"id":"including-the-custom-elements-schema","level":2,"text":"Including the Custom Elements Schema"},{"id":"calling-definecustomelements","level":2,"text":"Calling defineCustomElements"},{"id":"accessing-components-using-viewchild-and-viewchildren","level":2,"text":"Accessing components using ViewChild and ViewChildren"}],"srcPath":"./src/docs/framework-integration/angular.md","content":"\n<h1 id=\"angular\">\n  \n  Angular\n  \n</h1>\n<p>Using a Stencil built web component collection within an Angular CLI project is a two-step process. We need to:</p>\n<ol>\n<li>Include the <code>CUSTOM_ELEMENTS_SCHEMA</code> in the modules that use the components</li>\n<li>Call <code>defineCustomElements(window)</code> from <code>main.ts</code> (or some other appropriate place)</li>\n</ol>\n\n<h2 id=\"including-the-custom-elements-schema\">\n  <a class=\"heading-link\" href=\"#including-the-custom-elements-schema\"><app-icon name=\"link\"></app-icon>\n  Including the Custom Elements Schema\n  </a>\n</h2>\n<p>Including the <code>CUSTOM_ELEMENTS_SCHEMA</code> in the module allows the use of the web components in the HTML markup without the compiler producing errors. Here is an example of adding it to <code>AppModule</code>:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/platform-browser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CUSTOM_ELEMENTS_SCHEMA</span><span class=\"token punctuation\">,</span> NgModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormsModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/forms'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SharedModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./shared/shared.module'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">NgModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  declarations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AppComponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  imports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>BrowserModule<span class=\"token punctuation\">,</span> FormsModule<span class=\"token punctuation\">,</span> SharedModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  bootstrap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AppComponent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  schemas<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">CUSTOM_ELEMENTS_SCHEMA</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>The <code>CUSTOM_ELEMENTS_SCHEMA</code> needs to be included in any module that uses custom elements.</p>\n\n<h2 id=\"calling-definecustomelements\">\n  <a class=\"heading-link\" href=\"#calling-definecustomelements\"><app-icon name=\"link\"></app-icon>\n  Calling defineCustomElements\n  </a>\n</h2>\n<p>A component collection built with Stencil includes a main function that is used to load the components in the collection. That function is called <code>defineCustomElements()</code> and it needs to be called once during the bootstrapping of your application. One convenient place to do this is in <code>main.ts</code> as such:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> enableProdMode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> platformBrowserDynamic <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/platform-browser-dynamic'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app/app.module'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> environment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./environments/environment'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineCustomElements <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'test-components/dist/loader'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">.</span>production<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">enableProdMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">platformBrowserDynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bootstrapModule</span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">defineCustomElements</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"accessing-components-using-viewchild-and-viewchildren\">\n  <a class=\"heading-link\" href=\"#accessing-components-using-viewchild-and-viewchildren\"><app-icon name=\"link\"></app-icon>\n  Accessing components using ViewChild and ViewChildren\n  </a>\n</h2>\n<p>Once included, components could be referenced in your code using <code>ViewChild</code> and <code>ViewChildren</code> as in the following example:</p>\n<pre><code>import {Component, ElementRef, ViewChild} from '@angular/core';\n\nimport 'test-components';\n\n@Component({\n    selector: 'app-home',\n    template: `<test-components #test></test-components>`,\n    styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n\n    @ViewChild('test') myTestComponent: ElementRef<HTMLTestComponentElement>;\n\n    async onAction() {\n        await this.myTestComponent.nativeElement.testComponentMethod();\n    }\n}\n</code></pre>"}